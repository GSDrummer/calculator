{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearButton.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Button0","Input","input","ClearButton","handleClear","App","addToInput","setState","state","handleEqual","math","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7adcb06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst isOperator = (val) => {\r\n  return !isNaN(val) || val === \".\";\r\n};\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <div\r\n      className={`button-container ${\r\n        isOperator(props.children) ? null : \"operator\"\r\n      }`}\r\n      onClick={() => props.handleClick(props.val)}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Button0 = (props) => {\r\n  return (\r\n    <div\r\n      className={`button0`}\r\n      onClick={() => props.handleClick(props.children)}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// export const ButtonOps = (props) => {\r\n//   return (\r\n//     <div\r\n//       className={`button-container ${\r\n//         isOperator(props.children) ? null : \"operator\"\r\n//       }`}\r\n//       onClick={() => props.handleClick(props.op)}\r\n//     >\r\n//       {props.children}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nexport const Input = (props) => {\r\n  return <div className=\"input\">{props.input}</div>;\r\n};\r\n","import React from \"react\";\r\nimport \"./ClearButton.css\";\r\n\r\nexport const ClearButton = (props) => {\r\n  return (\r\n    <div className=\"clear-btn\" onClick={props.handleClear}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Button } from \"./components/Button\";\nimport { Button0 } from \"./components/Button\";\nimport { Input } from \"./components/Input\";\nimport { ClearButton } from \"./components/ClearButton\";\nimport * as math from \"mathjs\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n    };\n  }\n\n  addToInput = (val) => {\n    this.setState({ input: this.state.input + val });\n  };\n\n  handleEqual = () => {\n    try {\n      this.setState({ input: math.evaluate(this.state.input) });\n    } catch {\n      this.setState({ input: \"ERROR\" });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          <Input input={this.state.input} />\n          <div className=\"row1\">\n            <Button0 handleClick={this.addToInput}>0</Button0>\n            <Button val=\".\" handleClick={this.addToInput}>\n              .\n            </Button>\n            <Button handleClick={() => this.handleEqual()}>=</Button>\n            <div className=\"row\">\n              <Button val=\"1\" handleClick={this.addToInput}>\n                1\n              </Button>\n              <Button val=\"2\" handleClick={this.addToInput}>\n                2\n              </Button>\n              <Button val=\"3\" handleClick={this.addToInput}>\n                3\n              </Button>\n              <Button val=\"+\" handleClick={this.addToInput}>\n                +\n              </Button>\n            </div>\n            <div className=\"row\">\n              <Button val=\"4\" handleClick={this.addToInput}>\n                4\n              </Button>\n              <Button val=\"5\" handleClick={this.addToInput}>\n                5\n              </Button>\n              <Button val=\"6\" handleClick={this.addToInput}>\n                6\n              </Button>\n              <Button val=\"-\" handleClick={this.addToInput}>\n                -\n              </Button>\n              <div className=\"row\">\n                <Button val=\"7\" handleClick={this.addToInput}>\n                  7\n                </Button>\n                <Button val=\"8\" handleClick={this.addToInput}>\n                  8\n                </Button>\n                <Button val=\"9\" handleClick={this.addToInput}>\n                  9\n                </Button>\n                <Button val=\"*\" handleClick={this.addToInput}>\n                  x\n                </Button>\n\n                <div className=\"row\">\n                  <ClearButton handleClear={() => this.setState({ input: \"\" })}>\n                    A/C\n                  </ClearButton>\n                  <Button val=\"/\" handleClick={this.addToInput}>\n                    รท\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}